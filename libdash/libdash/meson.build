LibXml2_dep = dependency('LibXml2')
ZLIB_dep = dependency('ZLIB')
CURL_dep = dependency('CURL')
thread_dep = dependency('threads')

incdir = include_directories('include')

sources = [
    'source/network/AbstractChunk.cpp',
    'source/network/DownloadStateManager.cpp',
    'source/libdash.cpp',
    'source/manager/DASHManager.cpp',
    'source/helpers/Path.cpp',
    'source/helpers/String.cpp',
    'source/helpers/BlockStream.cpp',
    'source/helpers/Time.cpp',
    'source/helpers/SyncedBlockStream.cpp',
    'source/dllmain.cpp',
    'source/xml/Node.cpp',
    'source/xml/DOMHelper.cpp',
    'source/xml/DOMParser.cpp',
    'source/mpd/Range.cpp',
    'source/mpd/Label.cpp',
    'source/mpd/SegmentTemplate.cpp',
    'source/mpd/Subset.cpp',
    'source/mpd/UIntPairs.cpp',
    'source/mpd/SegmentList.cpp',
    'source/mpd/SegmentBase.cpp',
    'source/mpd/Switching.cpp',
    'source/mpd/ServiceDescription.cpp',
    'source/mpd/ContentProtection.cpp',
    'source/mpd/Timeline.cpp',
    'source/mpd/PopularityRate.cpp',
    'source/mpd/AbstractMPDElement.cpp',
    'source/mpd/Resync.cpp',
    'source/mpd/Segment.cpp',
    'source/mpd/ProducerReferenceTime.cpp',
    'source/mpd/Preselection.cpp',
    'source/mpd/SegmentTimeline.cpp',
    'source/mpd/ModelPair.cpp',
    'source/mpd/ContentPopularityRate.cpp',
    'source/mpd/MultipleSegmentBase.cpp',
    'source/mpd/InitializationSet.cpp',
    'source/mpd/PatchLocation.cpp',
    'source/mpd/ProgramInformation.cpp',
    'source/mpd/Period.cpp',
    'source/mpd/RepresentationBase.cpp',
    'source/mpd/AdaptationSet.cpp',
    'source/mpd/OperatingBandwidth.cpp',
    'source/mpd/BaseUrl.cpp',
    'source/mpd/FailoverContent.cpp',
    'source/mpd/UIntVWithID.cpp',
    'source/mpd/SubRepresentation.cpp',
    'source/mpd/Latency.cpp',
    'source/mpd/Descriptor.cpp',
    'source/mpd/LeapSecondInformation.cpp',
    'source/mpd/Representation.cpp',
    'source/mpd/EventStream.cpp',
    'source/mpd/Event.cpp',
    'source/mpd/RandomAccess.cpp',
    'source/mpd/ExtendedBandwidth.cpp',
    'source/mpd/UIntPairsWithID.cpp',
    'source/mpd/MPD.cpp',
    'source/mpd/ContentComponent.cpp',
    'source/mpd/PlaybackRate.cpp',
    'source/mpd/Metrics.cpp',
    'source/mpd/URLType.cpp',
    'source/mpd/SegmentURL.cpp',
    'source/mpd/OperatingQuality.cpp',
    'source/mpd/FCS.cpp',
    'source/metrics/HTTPTransaction.cpp',
    'source/metrics/TCPConnection.cpp',
    'source/metrics/ThroughputMeasurement.cpp',
    'source/portable/MultiThreading.cpp'
]
dash_lib = shared_library('dash', 
			sources,
			dependencies : [LibXml2_dep, ZLIB_dep, CURL_dep, thread_dep],
			include_directories : incdir
)
# target_link_libraries(['dash', curl_libraries, zlib_libraries, libxml2_libraries])
